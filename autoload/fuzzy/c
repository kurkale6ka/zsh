# Fuzzy cd based on visited locations (bookmarks) or 'updatedb' indexed files

local db=$XDG_DATA_HOME/marks/marks.sqlite

# Statistics
if [[ $1 == -s ]]
then
   sqlite3 $db 'SELECT * FROM marks ORDER BY weight DESC;' | column -t -s'|' | less
   return 0
fi

if (($# > 0))
then
   if (( $+commands[fzf] ))
   then
      local dir="$(sqlite3 $db "SELECT dir FROM marks ORDER BY weight DESC;" | fzf +s -0 -1 -q$@ || echo $pipestatus[2])"
   else
      # Note: for more than 2 arguments, not all permutations are tried.
      # So for c 1 2 3, %1%2%3% and %3%2%1% are only tried.
      local dir="$(sqlite3 $db "SELECT dir FROM marks WHERE dir LIKE '%${(j.%.)@}%' or dir LIKE '%${(j.%.)${(aO)@}}%' ORDER BY weight DESC LIMIT 1;")"
      [[ -z $dir ]] && dir=1
   fi
else
   if (( $+commands[fzf] ))
   then
      local dir="$(sqlite3 $db "SELECT dir FROM marks ORDER BY weight DESC;" | fzf +s -0 -1 || echo $pipestatus[2])"
   else
      local dir="$(sqlite3 $db "SELECT dir FROM marks ORDER BY weight DESC LIMIT 1;")"
      [[ -z $dir ]] && dir=1
   fi
fi

if [[ -d $dir ]]
then
   cd -- $dir
# Only use locate if there were no matches, not if 'Ctrl+c' was used for instance
elif ((dir == 1)) && (( $+commands[fzf] ))
then
   # 'updatedb' indexed files
   if (($# > 0))
   then
      local file="$(locate -0 / | grep -z -vE '~$' | fzf --read0 -0 -1 -q$@)"
   else
      local file="$(locate -0 / | grep -z -vE '~$' | fzf --read0 -0 -1)"
   fi
   if [[ -n $file ]]
   then
      if [[ -d $file ]]
      then
         cd -- $file
      else
         cd -- ${file:h}
      fi
   fi
fi
